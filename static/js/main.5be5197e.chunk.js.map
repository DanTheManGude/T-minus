{"version":3,"sources":["Constants.js","utils.js","Components/Numbers.js","Components/Controls.js","Components/MainTask.js","Components/TimerContainer.js","App.js","index.js"],"names":["backgroundUrls","LOCAL_STORAGE_KEYS","MAIN_TASK","ORIGINAL_TIME","setLocalStorage","key","value","localStorage","setItem","Numbers","props","time","isRunning","enterTime","minutes","Math","floor","seconds","className","readOnly","type","autoComplete","onChange","event","newMinutes","target","style","cursor","String","padStart","Controls","onResetClick","setIsRunning","onClick","disabled","backgroundColor","MainTask","mainTask","enterMainTask","newMainTask","TimerContainer","updateBackground","isTestingBackground","useState","setMainTask","originalTime","setOriginalTime","setTime","intervalId","setIntervalId","intervalIdRef","useRef","useEffect","current","useCallback","localStorageStore","Object","values","reduce","acc","getItem","localTime","localTask","newIntervalId","setInterval","oldTime","clearInterval","newTask","newTime","chooseRandomBackgroundUrl","random","length","App","backgroundUrl","setBackgroundUrl","console","log","backgroundImage","newBackground","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5be5197e.chunk.js","sourcesContent":["export const backgroundUrls = [\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/potw2039a.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/hubble_snowman_wfc3_display.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/hubble_deml249_large_3mb.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/hubble_ngc2903_potw2143a.jpg.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/potw2138a.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/arp299.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/potw2103a.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/main_image_star-forming_region_carina_nircam_final-5mb.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/main_image_galaxies_stephans_quintet_sq_nircam_miri_final-5mb.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/main_image_stellar_death_s_ring_miri_nircam_sidebyside-5mb.jpg\",\n  \"https://www.nasa.gov/sites/default/files/thumbnails/image/main_image_deep_field_smacs0723-5mb.jpg\",\n];\n\nexport const testBackgroundUrl = null;\n\nexport const LOCAL_STORAGE_KEYS = {\n  MAIN_TASK: \"MAIN_TASK\",\n  ORIGINAL_TIME: \"ORIGINAL_TIME\",\n};\n\nexport const defaultTask = \"Main Task\";\nexport const defaultTime = 1200;\n","export const getLocalStorage = (keys) =>\n  keys.reduce((acc, key) => {\n    const value = localStorage.getItem(key);\n    return { ...acc, [key]: value };\n  }, {});\n\nexport const setLocalStorage = (key, value) => {\n  localStorage.setItem(key, value);\n};\n","function Numbers(props) {\n  const { time, isRunning, enterTime } = props;\n\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n\n  const updateMinutes = (event) => {\n    const newMinutes = event.target.value;\n    const newTime = newMinutes * 60;\n    enterTime(newTime);\n  };\n\n  return (\n    <div className=\"numbersContainer\">\n      <input\n        className=\"minutesInput\"\n        readOnly={isRunning}\n        type=\"text\"\n        value={minutes}\n        autoComplete=\"false\"\n        onChange={updateMinutes}\n        style={isRunning ? { cursor: \"not-allowed\" } : {}}\n      />\n      :{String(seconds).padStart(2, \"0\")}\n    </div>\n  );\n}\n\nexport default Numbers;\n","function Controls(props) {\n  const { onResetClick, isRunning, setIsRunning } = props;\n\n  const updateIsRunning = () => {\n    const newIsRunning = !isRunning;\n    setIsRunning(newIsRunning);\n  };\n\n  return (\n    <div className=\"controls\">\n      <button\n        className=\"controls-button\"\n        onClick={onResetClick}\n        disabled={isRunning}\n        style={{\n          backgroundColor: isRunning ? \"#aaaaaa\" : \"#f0ad4e\",\n          cursor: isRunning ? \"not-allowed\" : \"pointer\",\n        }}\n      >\n        Reset\n      </button>\n      <button\n        className=\"controls-button\"\n        onClick={updateIsRunning}\n        style={{\n          backgroundColor: isRunning ? \"#bb2124\" : \"#22bb33\",\n        }}\n      >\n        {isRunning ? \"Stop\" : \"Start\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Controls;\n","function MainTask(props) {\n  const { mainTask, enterMainTask } = props;\n\n  const updateMainTask = (event) => {\n    const newMainTask = event.target.value;\n    enterMainTask(newMainTask);\n  };\n\n  return (\n    <div>\n      <textarea\n        className=\"mainTaskInput\"\n        type=\"text\"\n        value={mainTask}\n        autoComplete=\"false\"\n        onChange={updateMainTask}\n      />\n    </div>\n  );\n}\n\nexport default MainTask;\n","import { useState, useEffect, useCallback, useRef } from \"react\";\n\nimport { getLocalStorage, setLocalStorage } from \"../utils\";\nimport { LOCAL_STORAGE_KEYS, defaultTask, defaultTime } from \"../Constants\";\nimport Numbers from \"./Numbers\";\nimport Controls from \"./Controls\";\nimport MainTask from \"./MainTask\";\n\nfunction TimerContainer(props) {\n  const { updateBackground, isTestingBackground } = props;\n\n  const [mainTask, setMainTask] = useState(defaultTask);\n  const [originalTime, setOriginalTime] = useState(defaultTime);\n  const [time, setTime] = useState(originalTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [intervalId, setIntervalId] = useState();\n  const intervalIdRef = useRef();\n\n  useEffect(() => {\n    intervalIdRef.current = intervalId;\n  }, [intervalId]);\n\n  const onResetClick = useCallback(() => {\n    setTime(originalTime);\n  }, [originalTime]);\n\n  const enterTime = (newTime) => {\n    setTime(newTime);\n    setOriginalTime(newTime);\n    setLocalStorage(LOCAL_STORAGE_KEYS.ORIGINAL_TIME, newTime);\n  };\n\n  const enterMainTask = (newTask) => {\n    setMainTask(newTask);\n    setLocalStorage(LOCAL_STORAGE_KEYS.MAIN_TASK, newTask);\n  };\n\n  useEffect(() => {\n    const localStorageStore = getLocalStorage(\n      Object.values(LOCAL_STORAGE_KEYS)\n    );\n\n    const localTime = localStorageStore[LOCAL_STORAGE_KEYS.ORIGINAL_TIME];\n    if (localTime) {\n      setTime(localTime);\n      setOriginalTime(localTime);\n    }\n\n    const localTask = localStorageStore[LOCAL_STORAGE_KEYS.MAIN_TASK];\n    if (localTask) {\n      setMainTask(localTask);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isRunning) {\n      const newIntervalId = setInterval(() => {\n        setTime((oldTime) => oldTime - 1);\n      }, 1000);\n      setIntervalId(newIntervalId);\n    } else if (intervalIdRef.current) {\n      clearInterval(intervalIdRef.current);\n    }\n  }, [isRunning]);\n\n  useEffect(() => {\n    if (time <= 0) {\n      setIsRunning(false);\n      onResetClick();\n    }\n  }, [onResetClick, time]);\n\n  return (\n    <div className=\"timer-container\">\n      <MainTask mainTask={mainTask} enterMainTask={enterMainTask} />\n      <Numbers time={time} enterTime={enterTime} isRunning={isRunning} />\n      <Controls\n        onResetClick={onResetClick}\n        isRunning={isRunning}\n        setIsRunning={setIsRunning}\n      />\n      <button\n        className=\"new-background-button\"\n        onClick={updateBackground}\n        disabled={isTestingBackground}\n      >\n        New background\n      </button>\n    </div>\n  );\n}\n\nexport default TimerContainer;\n","import { useState, useEffect } from \"react\";\n\nimport { backgroundUrls, testBackgroundUrl } from \"./Constants\";\nimport TimerContainer from \"./Components/TimerContainer\";\n\nconst chooseRandomBackgroundUrl = () =>\n  backgroundUrls[Math.floor(Math.random() * backgroundUrls.length)];\n\nfunction App() {\n  const [backgroundUrl, setBackgroundUrl] = useState();\n  const isTestingBackground = !!testBackgroundUrl;\n\n  useEffect(() => {\n    setBackgroundUrl(\n      isTestingBackground ? testBackgroundUrl : chooseRandomBackgroundUrl()\n    );\n  }, [isTestingBackground]);\n\n  useEffect(() => {\n    console.log(backgroundUrl);\n  }, [backgroundUrl]);\n\n  return (\n    <div\n      className=\"app\"\n      style={{\n        backgroundImage: `url(${backgroundUrl})`,\n      }}\n    >\n      <TimerContainer\n        updateBackground={() => {\n          if (isTestingBackground) {\n            return;\n          }\n          let newBackground = backgroundUrl;\n          while (newBackground === backgroundUrl) {\n            newBackground = chooseRandomBackgroundUrl();\n          }\n          setBackgroundUrl(newBackground);\n        }}\n        isTestingBackground={isTestingBackground}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}